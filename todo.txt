unicode identifier support (native and \u)
support unions (right now 0-1 fields parsed as struct)
look into what String is, and whether to bridge it
think about bridging NSNumber with Number prototype
some JS callbacks don't use exception pointers at all...
a newline needs to not be allowed after a unary *
finish implementing default xml namespace statement
encode newlines in history for later replay (psql uses ^A)

consider replacing regex literals with constructors
  https://bugzilla.mozilla.org/show_bug.cgi?id=98409
numerification needs to use specific precision values
  https://bugzilla.mozilla.org/show_bug.cgi?id=5856
consider a mode where unicode string content is saved
  https://bugzilla.mozilla.org/show_bug.cgi?id=274152

NSDictionaries that have NSNumber keys don't getProperty
errors in another process aren't displayed; to fix this, parse errors should get converted to exceptions and thrown
CYPoolTry/Catch now carefully save the exception after it /no longer needs the exception/... uhh... wtf?
throw CYJSError should probably be replaced with CYThrow() across the board
figure out what to do about global context refs: I really really want to retain the bastards
the concept of NULL pooling is entirely incorrect and sad... bad... evil... need to work on this... really
NSArray's .toString() and .toLocaleString() fail hard, as Array.prototype.to*String are Array-specific
applyOnMainThread, when done at console, loops the cyonifier
special work needs to be done to correctly handle the "arguments" symbol: Declare("arguments", ...Special)
at the Program level I seem to be eating away all of the var statements
function pointers are ?; note that blocks are currently block_P = '?'
I should probably attempt to use the auto_ flag somehow to not do contexts_ push when compiling
Object_callAsFunction_toCYON should be implemented

[NSString stringWithString:""] crashes, on linux, not on mac

replace procmod g+s with gdb's macosx_get_task_for_pid_rights
